/*Problem statement:-
For a given two-dimensional integer array/list of size (N x M), you need to find out which row or column has the largest sum(sum of all the elements in a row or column) amongst all the rows/columns.

Note :
If there are more than one rows/columns with maximum sum, consider the row/column that comes first. And if ith row and jth column has the same largest sum, consider the ith row as answer.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
1 <= t <= 10^2
1 <= N <= 10^3
1 <= M <= 10^3
Time Limit: 1sec
Sample Input 1:
1
3 2
6 9 
8 5 
9 2 
Sample Output 1:
column 0 23
Sample Input 2:
1
4 4
6 9 8 5 
9 2 4 1 
8 3 9 3 
8 7 8 6 
Sample Output 2:
column 0 31
>>>>>
>>>>>>

Solution:->>>
*/
 class Solution {

	public static void findLargest(int mat[][]) {
		int largest = Integer.MIN_VALUE;
		int row = mat.length;
		String winner = "row";
		int index = 0;
		if (row == 0) {
			System.out.print(winner + " " + index + " " + largest);
			return;
		}
		int cols = mat[0].length;
		for (int i = 0; i < row; i++) {
			int sum = 0;
			for (int j = 0; j < cols; j++) {
				sum = sum + mat[i][j];
			}
			if (sum > largest) {
				largest = sum;
				index = i;
			}
		}
		for (int i = 0; i < cols; i++) {
			int sum = 0;
			for (int j = 0; j < row; j++) {
				sum = sum + mat[j][i];
			}
			if (sum > largest) {
				largest = sum;
				index = i;
				winner = "column";
			}
		}

		System.out.println(winner + " " + index + " " + largest);
	}

}









